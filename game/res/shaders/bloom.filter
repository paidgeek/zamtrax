const float iteration = 4;

#shader
{
    vec2 texelSize = vec2( 1.0 / textureSize );
    vec2 texelSize05 = texelSize * 0.5;

    vec2 uvOffset = texelSize.xy * vec2( iteration, iteration ) + texelSize05;

    vec2 texCoordSample;
    vec4 color;

    texCoordSample.x = vUV.x - uvOffset.x;
    texCoordSample.y = vUV.y + uvOffset.y;
    color = texture( filterTexture, texCoordSample );

    texCoordSample.x = vUV.x + uvOffset.x;
    texCoordSample.y = vUV.y + uvOffset.y;
    color += texture( filterTexture, texCoordSample );

    texCoordSample.x = vUV.x + uvOffset.x;
    texCoordSample.y = vUV.y - uvOffset.y;
    color += texture( filterTexture, texCoordSample );

    texCoordSample.x = vUV.x - uvOffset.x;
    texCoordSample.y = vUV.y - uvOffset.y;
    color += texture( filterTexture, texCoordSample );

   return color * 0.25;
}
